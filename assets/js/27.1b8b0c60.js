(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[27],{

/***/ "./guide/plugins/WritePlugins.md":
/*!***************************************!*\
  !*** ./guide/plugins/WritePlugins.md ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _WritePlugins_md_vue_type_template_id_7550795c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WritePlugins.md?vue&type=template&id=7550795c& */ "./guide/plugins/WritePlugins.md?vue&type=template&id=7550795c&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");

var script = {}


/* normalize component */

var component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_1__["default"])(
  script,
  _WritePlugins_md_vue_type_template_id_7550795c___WEBPACK_IMPORTED_MODULE_0__["render"],
  _WritePlugins_md_vue_type_template_id_7550795c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"],
  false,
  null,
  null,
  null
  
)

/* harmony default export */ __webpack_exports__["default"] = (component.exports);

/***/ }),

/***/ "./guide/plugins/WritePlugins.md?vue&type=template&id=7550795c&":
/*!**********************************************************************!*\
  !*** ./guide/plugins/WritePlugins.md?vue&type=template&id=7550795c& ***!
  \**********************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_0fe19182_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_WritePlugins_md_vue_type_template_id_7550795c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"0fe19182-vue-loader-template"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib??ref--1-1!../../node_modules/@vuepress/markdown-loader??ref--1-2!./WritePlugins.md?vue&type=template&id=7550795c& */ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"0fe19182-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./guide/plugins/WritePlugins.md?vue&type=template&id=7550795c&");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "render", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_0fe19182_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_WritePlugins_md_vue_type_template_id_7550795c___WEBPACK_IMPORTED_MODULE_0__["render"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return _node_modules_cache_loader_dist_cjs_js_cacheDirectory_node_modules_vuepress_core_node_modules_cache_vuepress_cacheIdentifier_0fe19182_vue_loader_template_node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_cache_loader_dist_cjs_js_ref_1_0_node_modules_vue_loader_lib_index_js_ref_1_1_node_modules_vuepress_markdown_loader_index_js_ref_1_2_WritePlugins_md_vue_type_template_id_7550795c___WEBPACK_IMPORTED_MODULE_0__["staticRenderFns"]; });



/***/ }),

/***/ "./node_modules/cache-loader/dist/cjs.js?{\"cacheDirectory\":\"node_modules/@vuepress/core/node_modules/.cache/vuepress\",\"cacheIdentifier\":\"0fe19182-vue-loader-template\"}!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader/lib/index.js?!./node_modules/@vuepress/markdown-loader/index.js?!./guide/plugins/WritePlugins.md?vue&type=template&id=7550795c&":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js?{"cacheDirectory":"node_modules/@vuepress/core/node_modules/.cache/vuepress","cacheIdentifier":"0fe19182-vue-loader-template"}!./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/cache-loader/dist/cjs.js??ref--1-0!./node_modules/vue-loader/lib??ref--1-1!./node_modules/@vuepress/markdown-loader??ref--1-2!./guide/plugins/WritePlugins.md?vue&type=template&id=7550795c& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "staticRenderFns", function() { return staticRenderFns; });
var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{"slot-key":_vm.$parent.slotKey}},[_c('h1',{attrs:{"id":"write-plugins"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#write-plugins"}},[_vm._v("#")]),_vm._v(" Write Plugins")]),_vm._v(" "),_c('p',[_vm._v("While bits comes with a lot of handy features already built in to its core, you can probably imagine\ncases where you want to extend the basic functionality with your own.\nBeginning with version "),_c('code',[_vm._v("1.10")]),_vm._v(" you can create plugins to extend the library to your hearts desire.")]),_vm._v(" "),_c('h2',{attrs:{"id":"use-plugins"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#use-plugins"}},[_vm._v("#")]),_vm._v(" Use plugins")]),_vm._v(" "),_c('p',[_vm._v("There are some plugins you can install through npm and register them\nin your bits application. There are already some pre-made plugins\nfor everyday problems:")]),_vm._v(" "),_c('ul',[_c('li',[_c('RouterLink',{attrs:{"to":"/guide/plugins/Translator.html"}},[_vm._v("Translator (Multi-Language Bits)")])],1),_vm._v(" "),_c('li',[_c('RouterLink',{attrs:{"to":"/guide/plugins/LitHtml.html"}},[_vm._v("lit-html (Complex, reactive templates)")])],1),_vm._v(" "),_c('li',[_c('RouterLink',{attrs:{"to":"/guide/plugins/Store.html"}},[_vm._v("Store (App-wide, reactive data store)")])],1)]),_vm._v(" "),_c('p',[_vm._v("Simply install the plugin through npm and add it to your app configuration, for example:")]),_vm._v(" "),_c('div',{staticClass:"language- extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("npm install @labor-digital/bits-translator\n")])])]),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("BitApp"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" TranslatorPlugin "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits-translator'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("new")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("BitApp")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("/* ... */")]),_vm._v("\n    plugins"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("[")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("new")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("TranslatorPlugin")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("]")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n")])])]),_c('div',{staticClass:"custom-block tip"},[_c('p',{staticClass:"custom-block-title"},[_vm._v("TIP")]),_vm._v(" "),_c('p',[_vm._v("A plugin is only active in the application you have registered it for.\nShould you have multiple bit apps, you can have completely different\nplugins and/or configurations.")])]),_vm._v(" "),_c('h2',{attrs:{"id":"create-a-plugin"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#create-a-plugin"}},[_vm._v("#")]),_vm._v(" Create a plugin")]),_vm._v(" "),_c('p',[_vm._v("To create a new plugin, start with a new typescript file that will\ncontain the main class. In our case we call it "),_c('code',[_vm._v("DemoPlugin.ts")]),_vm._v(" that\nhas the following content:")]),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("IBitPlugin"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("export")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("class")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("DemoPlugin")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("implements")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("IBitPlugin")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n")])])]),_c('p',[_vm._v("That is the basic implementation required to make a plugin, now you have\nto register it in your app in the plugins section of the app config.")]),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("BitApp"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" DemoPlugin "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'./DemoPlugin'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("new")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("BitApp")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("/* ... */")]),_vm._v("\n    plugins"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("[")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("new")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("DemoPlugin")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("]")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n")])])]),_c('p',[_vm._v("So, while we created a plugin, we don't have much benefit yet. So let's start to\nextend our plugin class with the hook methods. The plugin has three lifecycle hooks to inject itself into the application.")]),_vm._v(" "),_c('h3',{attrs:{"id":"initialized"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#initialized"}},[_vm._v("#")]),_vm._v(" initialized")]),_vm._v(" "),_c('p',[_vm._v("Executed right after the plugin instance was initialized. This means,\nthe plugin loader noticed the registered plugin instance for the first time.\nThis is normally done right before the "),_c('RouterLink',{attrs:{"to":"/guide/essentials/Lifecycle.html#created-2"}},[_vm._v("\"created\" lifecycle hook")])],1),_vm._v(" "),_c('div',{staticClass:"custom-block tip"},[_c('p',{staticClass:"custom-block-title"},[_vm._v("TIP")]),_vm._v(" "),_c('p',[_vm._v("This hook is the best place to register custom services into the service container.")]),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("BitApp"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" IBitPlugin"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("PluginService"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'./PluginService'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("export")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("class")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("DemoPlugin")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("implements")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("IBitPlugin")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("public")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("initialized")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("app"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" BitApp"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("void")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// Either as instance that must be available at all times")]),_vm._v("\n        app"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("di"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("set")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'pluginService'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("new")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("PluginService")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// Or as factory to be created only when required")]),_vm._v("\n        app"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("di"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("setFactory")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'pluginService'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=>")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("new")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("PluginService")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n")])])])]),_vm._v(" "),_c('h3',{attrs:{"id":"created"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#created"}},[_vm._v("#")]),_vm._v(" created")]),_vm._v(" "),_c('p',[_vm._v("Executed when the bits app reaches the "),_c('RouterLink',{attrs:{"to":"/guide/essentials/Lifecycle.html#created-2"}},[_vm._v("\"created\" lifecycle hook")]),_vm._v(", before the DOM gets mounted.")],1),_vm._v(" "),_c('h3',{attrs:{"id":"mounted"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#mounted"}},[_vm._v("#")]),_vm._v(" mounted")]),_vm._v(" "),_c('p',[_vm._v("Executed when the bits app reaches the "),_c('RouterLink',{attrs:{"to":"/guide/essentials/Lifecycle.html#mounted-2"}},[_vm._v("\"mounted\" lifecycle hook")]),_vm._v(", after the bits have been mounted to the DOM")],1),_vm._v(" "),_c('h2',{attrs:{"id":"extending-the-bits"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#extending-the-bits"}},[_vm._v("#")]),_vm._v(" Extending the bits")]),_vm._v(" "),_c('p',[_vm._v("Your plugin can extend extending bits by injecting methods, or a getters to all\nbit instances of the app, using the "),_c('code',[_vm._v("extendBits()")]),_vm._v(" method. The class extension is not done\nthrough the prototype, which allows for different extensions in different apps.")]),_vm._v(" "),_c('p',[_c('code',[_vm._v("extendBits()")]),_vm._v(" receives the "),_c('code',[_vm._v("inject()")]),_vm._v(" function as property to register extensions with.\nIf you ever worked with "),_c('a',{attrs:{"href":"https://nuxtjs.org/docs/2.x/directory-structure/plugins#inject-in-root--context","target":"_blank","rel":"noopener noreferrer"}},[_vm._v("nuxt"),_c('OutboundLink')],1),_vm._v(" you will probably\nknow what's coming next 😉.")]),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("IBitPluginExtensionInjector"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v("AbstractBit"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" IBitPlugin"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("export")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("class")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("DemoPlugin")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("implements")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("IBitPlugin")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("public")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("extendBits")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("inject"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" IBitPluginExtensionInjector"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("void")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// The first parameter defines the name of the method")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// to be added to the bit classes, the second parameter")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// defines the function to be executed when the method is called.")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// As you can see, the methods this always points to the bit it is ")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// executed in.")]),_vm._v("\n        \n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// We use the plugin service we injected in the \"initialized\" lifecycle hook")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// example further up on this page.")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("inject")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'changePluginMessage'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("function")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" AbstractBit"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" message"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token builtin"}},[_vm._v("string")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n            "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("$di"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("pluginService"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("message "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" message"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n        \n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// Instead of a function, you can also provide an object literal containing")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// additional options as second parameter. With this we tell inject, that it ")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("// should handle our callback like a getter.")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("inject")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'pluginService'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n            "),_c('span',{pre:true,attrs:{"class":"token function-variable function"}},[_vm._v("callback")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("function")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" AbstractBit"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n                "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("return")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("$di"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("pluginService"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n            "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v("\n            getter"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token boolean"}},[_vm._v("true")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n")])])]),_c('div',{staticClass:"custom-block tip"},[_c('p',{staticClass:"custom-block-title"},[_vm._v("TIP")]),_vm._v(" "),_c('p',[_vm._v("When you use inject, make sure to start your function parameters with "),_c('code',[_vm._v("(this: AbstractBit)")]),_vm._v(".\nThis tells typescript, that the function is actually part of the bit class, and you can access protected properties without issues.")])]),_vm._v(" "),_c('p',[_vm._v("After you registered the extensions, you can now use them in your bit.\nYou can see how it works in the bit we registered from our plugin.")]),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("AbstractBit"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" Hot"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" Listener"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token decorator"}},[_c('span',{pre:true,attrs:{"class":"token at operator"}},[_vm._v("@")]),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("Hot")])]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("module"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("export")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("class")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("PluginBit")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("extends")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("AbstractBit")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token decorator"}},[_c('span',{pre:true,attrs:{"class":"token at operator"}},[_vm._v("@")]),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("Listener")])]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'click'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("protected")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("onClick")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("void")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("$changePluginMessage")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'I was clicked!'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n    \n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("public")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("get")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("message")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token builtin"}},[_vm._v("string")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("return")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("$pluginService"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("message"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n")])])]),_c('div',{staticClass:"custom-block tip"},[_c('p',{staticClass:"custom-block-title"},[_vm._v("TIP")]),_vm._v(" "),_c('p',[_vm._v("The "),_c('code',[_vm._v("$")]),_vm._v(" prefix is a declaration I inherited from vue to prefix everything\nnot part of the current bit class. It is automatically prepended to every extension\nregistered through "),_c('code',[_vm._v("inject()")])])]),_vm._v(" "),_c('details',{staticClass:"custom-block details"},[_c('summary',[_vm._v("Plugin Service")]),_vm._v(" "),_c('p',[_vm._v("This is the source code of our plugin service, we registered in the \"initialized\" lifecycle hook example further up on this page.\nNothing much to talk about, other than the usage of "),_c('code',[_vm._v("makeObservable()")]),_vm._v(" to create a reactive service property.")]),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("makeObservable"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" observable"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'mobx'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("export")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("class")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("PluginService")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("protected")]),_vm._v(" _message"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token builtin"}},[_vm._v("string")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'Hello world! I am a demo plugin :)'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    \n    "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("constructor")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("makeObservable")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("_message"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" observable"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("as")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token builtin"}},[_vm._v("any")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n    \n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("public")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("set")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("message")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("message"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("_message "),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("=")]),_vm._v(" message"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n    \n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("public")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("get")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("message")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token builtin"}},[_vm._v("string")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("return")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("this")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(".")]),_vm._v("_message"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n")])])])]),_vm._v(" "),_c('h3',{attrs:{"id":"typescript-and-autocompletion"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#typescript-and-autocompletion"}},[_vm._v("#")]),_vm._v(" Typescript and Autocompletion")]),_vm._v(" "),_c('p',[_vm._v("While technically already working, typescript and your autocompletion will likely complain about\nnot knowing our extension being part of the bit class.")]),_vm._v(" "),_c('div',{staticClass:"language- extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-text"}},[_c('code',[_vm._v("TS2339: Property '$changePluginMessage' does not exist on type 'PluginBit'.\nTS2339: Property '$pluginService' does not exist on type 'PluginBit'.\n")])])]),_c('p',[_vm._v("To fix this issue we use module augmentation to tell typescript about our extension.\nAt the top of the plugin class we will add the following:")]),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("declare")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("module")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits/dist/Core/AbstractBit'")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("interface")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("AbstractBit")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("$changePluginMessage")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("message"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token builtin"}},[_vm._v("string")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("void")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("readonly")]),_vm._v(" $pluginService"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" PluginService"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("declare")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("module")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits/dist/Core/Di/DiContainer'")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("interface")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("DiContainer")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("readonly")]),_vm._v(" pluginService"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" PluginService\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n")])])]),_c('p',[_vm._v("And there you have it, now typescript compiles the code without an issue.")]),_vm._v(" "),_c('h2',{attrs:{"id":"providing-bits"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#providing-bits"}},[_vm._v("#")]),_vm._v(" Providing bits")]),_vm._v(" "),_c('p',[_vm._v("Your plugin can provide bit classes to the application, which is really helpful to encapsulate reusable code,\nfor sliders, modals and similar elements. The "),_c('code',[_vm._v("provideBits")]),_vm._v(" method in your plugin class allows you\nto return a bit definition you already know from the app options.")]),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("BitApp"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" IBitNs"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" IBitPlugin"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("PluginBit"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'./PluginBit'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("export")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("class")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("DemoPlugin")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("implements")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("IBitPlugin")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("/* ... */")]),_vm._v("\n    \n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("public")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("provideBits")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("app"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" BitApp"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" IBitNs\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("return")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n            plugin"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n                demo"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" PluginBit\n            "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n    \n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n")])])]),_c('p',[_vm._v("Now you can add this markup to your page and see how the bit\nprovided by the plugin is automatically registered for usage:")]),_vm._v(" "),_c('div',{staticClass:"language-html extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-html"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token tag"}},[_c('span',{pre:true,attrs:{"class":"token tag"}},[_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("<")]),_vm._v("b-mount")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token attr-name"}},[_vm._v("type")]),_c('span',{pre:true,attrs:{"class":"token attr-value"}},[_c('span',{pre:true,attrs:{"class":"token punctuation attr-equals"}},[_vm._v("=")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("\"")]),_vm._v("plugin/demo"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("\"")])]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(">")])]),_c('span',{pre:true,attrs:{"class":"token tag"}},[_c('span',{pre:true,attrs:{"class":"token tag"}},[_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("<")]),_vm._v("span")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token attr-name"}},[_vm._v("data-bind")]),_c('span',{pre:true,attrs:{"class":"token attr-value"}},[_c('span',{pre:true,attrs:{"class":"token punctuation attr-equals"}},[_vm._v("=")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("\"")]),_vm._v("message"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("\"")])]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(">")])]),_c('span',{pre:true,attrs:{"class":"token tag"}},[_c('span',{pre:true,attrs:{"class":"token tag"}},[_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("</")]),_vm._v("span")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(">")])]),_c('span',{pre:true,attrs:{"class":"token tag"}},[_c('span',{pre:true,attrs:{"class":"token tag"}},[_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("</")]),_vm._v("b-mount")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(">")])]),_vm._v("\n")])])]),_c('Example',{attrs:{"href":"/demo/examples/plugin-example.html","height":100}}),_vm._v(" "),_c('div',{staticClass:"custom-block tip"},[_c('p',{staticClass:"custom-block-title"},[_vm._v("TIP")]),_vm._v(" "),_c('p',[_vm._v("Like in the app bit definition you can nest the definition using object literals,\nthe resulting type will be \"plugin/demo\". I would strongly suggest to use a common \"namespace\"\nfor all your provided bits, to avoid naming collisions.")])]),_vm._v(" "),_c('div',{staticClass:"custom-block tip"},[_c('p',{staticClass:"custom-block-title"},[_vm._v("PRO-TIP")]),_vm._v(" "),_c('p',[_vm._v("Plugin bits are registered before those of the app, this allows you to\noverride plugin bits on a per-app basis.")])]),_vm._v(" "),_c('h2',{attrs:{"id":"providing-directives"}},[_c('a',{staticClass:"header-anchor",attrs:{"href":"#providing-directives"}},[_vm._v("#")]),_vm._v(" Providing directives")]),_vm._v(" "),_c('p',[_vm._v("Similar to providing whole bits, your plugin can bring its own "),_c('RouterLink',{attrs:{"to":"/guide/advanced/Directives.html"}},[_vm._v("directives")]),_vm._v(" and register them in the application.")],1),_vm._v(" "),_c('div',{staticClass:"language-typescript extra-class"},[_c('pre',{pre:true,attrs:{"class":"language-typescript"}},[_c('code',[_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("BitApp"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" IBitNs"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(",")]),_vm._v(" IBitPlugin"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'@labor-digital/bits'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("import")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("AlertDirective"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("from")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token string"}},[_vm._v("'./AlertDirective'")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n\n"),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("export")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("class")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("DemoPlugin")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("implements")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token class-name"}},[_vm._v("IBitPlugin")]),_vm._v("\n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token comment"}},[_vm._v("/* ... */")]),_vm._v("\n    \n    "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("public")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token function"}},[_vm._v("provideDirectives")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("(")]),_vm._v("app"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" BitApp"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(")")]),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" PlainObject"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v("<")]),_vm._v("IDirectiveCtor"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(">")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n        "),_c('span',{pre:true,attrs:{"class":"token keyword"}},[_vm._v("return")]),_vm._v(" "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("{")]),_vm._v("\n            alert"),_c('span',{pre:true,attrs:{"class":"token operator"}},[_vm._v(":")]),_vm._v(" AlertDirective\n        "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v(";")]),_vm._v("\n    "),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n    \n"),_c('span',{pre:true,attrs:{"class":"token punctuation"}},[_vm._v("}")]),_vm._v("\n")])])]),_c('div',{staticClass:"custom-block tip"},[_c('p',{staticClass:"custom-block-title"},[_vm._v("PRO-TIP")]),_vm._v(" "),_c('p',[_vm._v("Directives provided by plugins MAY override default directives like "),_c('code',[_vm._v("data-bind")]),_vm._v(", "),_c('code',[_vm._v("data-if")]),_vm._v(",\nhowever can, themselves be overwritten by the directive configuration on a per-app basis!")])])],1)}
var staticRenderFns = []



/***/ })

}]);
//# sourceMappingURL=27.1b8b0c60.js.map