{"version":3,"sources":["webpack:///./guide/essentials/DependencyInjection.md","webpack:///./guide/essentials/DependencyInjection.md?15e6","webpack:///./guide/essentials/DependencyInjection.md?4958"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiG;AACjG;;;AAGA;AAC0F;AAC1F,gBAAgB,2GAAU;AAC1B;AACA,EAAE,6FAAM;AACR,EAAE,sGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gF;;;;;;;;;;;;ACjBf;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,qCAAqC,OAAO,gCAAgC,WAAW,OAAO,6BAA6B,UAAU,mCAAmC,gCAAgC,yiBAAyiB,OAAO,mCAAmC,UAAU,mCAAmC,sCAAsC,4SAA4S,8CAA8C,YAAY,gBAAgB,+BAA+B,wBAAwB,gBAAgB,yBAAyB,4CAA4C,gBAAgB,yBAAyB,2CAA2C,gBAAgB,4BAA4B,mDAAmD,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,yBAAyB,4CAA4C,gBAAgB,0BAA0B,mCAAmC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,uCAAuC,gBAAgB,yBAAyB,gCAAgC,gBAAgB,6BAA6B,WAAW,qCAAqC,gBAAgB,yBAAyB,4CAA4C,gBAAgB,wBAAwB,wDAAwD,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,6BAA6B,WAAW,uIAAuI,8CAA8C,YAAY,gBAAgB,+BAA+B,wBAAwB,gBAAgB,yBAAyB,4CAA4C,gBAAgB,yBAAyB,2CAA2C,gBAAgB,4BAA4B,oDAAoD,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,yBAAyB,6DAA6D,gBAAgB,0BAA0B,oDAAoD,gBAAgB,6BAA6B,WAAW,uCAAuC,gBAAgB,0BAA0B,qCAAqC,gBAAgB,6BAA6B,mDAAmD,gBAAgB,0BAA0B,oDAAoD,gBAAgB,6BAA6B,uCAAuC,gBAAgB,6BAA6B,WAAW,qCAAqC,gBAAgB,yBAAyB,8BAA8B,gBAAgB,6BAA6B,qDAAqD,gBAAgB,0BAA0B,oDAAoD,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,6BAA6B,WAAW,uCAAuC,gBAAgB,yBAAyB,4CAA4C,gBAAgB,0BAA0B,mCAAmC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,uCAAuC,gBAAgB,yBAAyB,8BAA8B,gBAAgB,6BAA6B,WAAW,qCAAqC,gBAAgB,yBAAyB,iCAAiC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,6BAA6B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,yBAAyB,8BAA8B,gBAAgB,6BAA6B,oDAAoD,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,mCAAmC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,6BAA6B,WAAW,gVAAgV,8CAA8C,YAAY,gBAAgB,+BAA+B,wBAAwB,gBAAgB,yBAAyB,kDAAkD,gBAAgB,0BAA0B,uCAAuC,gBAAgB,yBAAyB,yCAAyC,gBAAgB,4BAA4B,uCAAuC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,yBAAyB,yCAAyC,gBAAgB,4BAA4B,uCAAuC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,WAAW,mCAAmC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,mCAAmC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,WAAW,kXAAkX,mCAAmC,UAAU,iCAAiC,8KAA8K,OAAO,2GAA2G,wFAAwF,OAAO,0BAA0B,UAAU,mCAAmC,6BAA6B,uYAAuY,8CAA8C,YAAY,gBAAgB,+BAA+B,wBAAwB,gBAAgB,yBAAyB,4CAA4C,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,6BAA6B,kDAAkD,gBAAgB,6BAA6B,WAAW,4BAA4B,gBAAgB,yBAAyB,0CAA0C,gBAAgB,wBAAwB,sCAAsC,gBAAgB,6BAA6B,WAAW,+BAA+B,gBAAgB,yBAAyB,yCAAyC,gBAAgB,4BAA4B,gCAAgC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,yBAAyB,uEAAuE,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,WAAW,+CAA+C,gBAAgB,4CAA4C,uCAAuC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,uCAAuC,gBAAgB,0BAA0B,wCAAwC,gBAAgB,yBAAyB,yCAAyC,gBAAgB,4BAA4B,uCAAuC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,gDAAgD,gBAAgB,4CAA4C,uCAAuC,gBAAgB,0BAA0B,uCAAuC,gBAAgB,6BAA6B,uCAAuC,gBAAgB,0BAA0B,kDAAkD,gBAAgB,6BAA6B,uCAAuC,gBAAgB,0BAA0B,wCAAwC,gBAAgB,yBAAyB,yCAAyC,gBAAgB,4BAA4B,uCAAuC,gBAAgB,6BAA6B,uCAAuC,gBAAgB,6BAA6B,mDAAmD,gBAAgB,6BAA6B,kDAAkD,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,6BAA6B,WAAW,gBAAgB,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,WAAW,maAAma,OAAO,uBAAuB,UAAU,mCAAmC,0BAA0B,+ZAA+Z,8CAA8C,YAAY,gBAAgB,+BAA+B,wBAAwB,gBAAgB,yBAAyB,6CAA6C,gBAAgB,yBAAyB,4CAA4C,gBAAgB,wBAAwB,qFAAqF,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,yBAAyB,+CAA+C,gBAAgB,4BAA4B,sDAAsD,gBAAgB,6BAA6B,WAAW,kDAAkD,gBAAgB,0BAA0B,oDAAoD,gBAAgB,6BAA6B,6DAA6D,gBAAgB,0BAA0B,0DAA0D,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,6BAA6B,WAAW,iCAAiC,OAAO,4BAA4B,UAAU,mCAAmC,+BAA+B,4VAA4V,8CAA8C,YAAY,gBAAgB,+BAA+B,wBAAwB,gBAAgB,yBAAyB,4CAA4C,gBAAgB,6BAA6B,WAAW,sCAAsC,gBAAgB,6BAA6B,WAAW,4BAA4B,gBAAgB,yBAAyB,0CAA0C,gBAAgB,wBAAwB,+CAA+C,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,yBAAyB,4CAA4C,gBAAgB,yBAAyB,2CAA2C,gBAAgB,4BAA4B,6CAA6C,gBAAgB,yBAAyB,6CAA6C,gBAAgB,4BAA4B,iDAAiD,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,0BAA0B,iCAAiC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,WAAW,qCAAqC,gBAAgB,yBAAyB,8BAA8B,gBAAgB,6BAA6B,yCAAyC,gBAAgB,6BAA6B,mDAAmD,gBAAgB,6BAA6B,2BAA2B,gBAAgB,0BAA0B,mCAAmC,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,2BAA2B,gBAAgB,6BAA6B,WAAW,iCAAiC,gBAAgB,6BAA6B,WAAW,6BAA6B,gBAAgB,6BAA6B,WAAW;AACj/hB","file":"assets/js/18.a5a493b8.js","sourcesContent":["import { render, staticRenderFns } from \"./DependencyInjection.md?vue&type=template&id=1d7721aa&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/@vuepress/core/node_modules/.cache/vuepress\\\",\\\"cacheIdentifier\\\":\\\"0fe19182-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??ref--1-1!../../node_modules/@vuepress/markdown-loader/index.js??ref--1-2!./DependencyInjection.md?vue&type=template&id=1d7721aa&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('ContentSlotsDistributor',{attrs:{\"slot-key\":_vm.$parent.slotKey}},[_c('h1',{attrs:{\"id\":\"dependency-injection\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#dependency-injection\"}},[_vm._v(\"#\")]),_vm._v(\" Dependency Injection\")]),_vm._v(\" \"),_c('p',[_vm._v(\"While you are working on a website you will get to the point, where you need some logic that repeats itself,\\nor an external library like axios to provide functionality. You can't always put those into components\\nor mixins. So you create a \\\"service\\\", some part of your codebase that does something in encapsulation.\\nThose services may or may not depend on each other, so you need to wire them together and use them\\nin your bit components later.\")]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"whats-dependency-injection\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#whats-dependency-injection\"}},[_vm._v(\"#\")]),_vm._v(\" Whats dependency injection\")]),_vm._v(\" \"),_c('p',[_vm._v(\"You can define a service by first creating a class, somewhere in your code. For our example, we want a simple\\nclass that returns a string value whenever the getString() method is executed:\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-typescript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"export\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"class\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"StringService\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"public\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"getString\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin\"}},[_vm._v(\"string\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"return\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'Hello World'\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"Secondly we create another service to log our string to the console:\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-typescript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"export\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"class\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"LoggerService\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"protected\")]),_vm._v(\" _stringService\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" StringService\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"constructor\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"stringService\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" StringService\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"_stringService \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" stringService\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n    \\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"public\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"logString\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"void\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token builtin\"}},[_vm._v(\"console\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"log\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"_stringService\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"getString\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"As you can see, LoggerService gets the StringService \\\"injected\\\" as a constructor parameter and\\nuses it when the logString() method is executed. This is the basic principle of dependency injection.\\nTo create the LoggerService you would now write something like this:\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-typescript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"const\")]),_vm._v(\" logger \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"LoggerService\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"StringService\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\nlogger\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"logString\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"In this fairly simple example there is no harm in doing it like this, but how does this scale\\nif your service has more than a single dependency? Or a dependency has dependencies as well?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"For that we use a \\\"container\\\" that handles the wiring of the dependencies for us.\")]),_vm._v(\" \"),_c('div',{staticClass:\"custom-block warning\"},[_c('p',{staticClass:\"custom-block-title\"},[_vm._v(\"WARNING\")]),_vm._v(\" \"),_c('p',[_vm._v(\"This is the most basic way of describing it. If you are new to dependency injection,\\nyou can take a look at the \"),_c('a',{attrs:{\"href\":\"https://en.wikipedia.org/wiki/Dependency_injection\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"wikipedia page of the topic\"),_c('OutboundLink')],1)])]),_vm._v(\" \"),_c('h2',{attrs:{\"id\":\"defining-services\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#defining-services\"}},[_vm._v(\"#\")]),_vm._v(\" Defining services\")]),_vm._v(\" \"),_c('p',[_vm._v(\"In a bits app, you can use the \\\"services\\\" option to define a list of services by a common \\\"alias\\\",\\nthe \\\"service key\\\". Each service key has a factory function which creates the service instance on demand.\\nThe instance itself will then be stored inside the container for later usage.\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-typescript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"import\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"BitApp\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\" DiContainer\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"from\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'dist/index'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"BitApp\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token comment\"}},[_vm._v(\"// ... other options\")]),_vm._v(\"\\n    services\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"stringService\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"StringService\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token function-variable function\"}},[_vm._v(\"loggerService\")]),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"c\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" DiContainer\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\"=>\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"new\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"LoggerService\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_vm._v(\"c\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"stringService\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_vm._v(\"\\n    \\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\")])])]),_c('p',[_vm._v(\"As you can see in the code, we create two factories, the first one creates the string service,\\nthe second one the logger service. Each factory receives the instance of the container as a parameter,\\nwhich you can use to retrieve other services with. Using this method you can create chains of\\ndependent services, that will only be created when needed.\")]),_vm._v(\" \"),_c('h3',{attrs:{\"id\":\"autocompletion\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#autocompletion\"}},[_vm._v(\"#\")]),_vm._v(\" Autocompletion\")]),_vm._v(\" \"),_c('p',[_vm._v(\"To help your IDE to figure out which service keys exist on the di container,\\nand to which services they resolve, you can take advantage of typescript.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Create a globals.d.ts file next to your index file and extend the DiContainer module there\\nwith the keys and the matching services.\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-typescript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"declare\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"module\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'@labor-digital/bits/dist/Core/Di/DiContainer'\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"interface\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"DiContainer\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        stringService\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" StringService\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\",\")]),_vm._v(\"\\n        loggerService\"),_c('span',{pre:true,attrs:{\"class\":\"token operator\"}},[_vm._v(\":\")]),_vm._v(\" LoggerService\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])]),_c('h2',{attrs:{\"id\":\"retrieving-services\"}},[_c('a',{staticClass:\"header-anchor\",attrs:{\"href\":\"#retrieving-services\"}},[_vm._v(\"#\")]),_vm._v(\" Retrieving Services\")]),_vm._v(\" \"),_c('p',[_vm._v(\"To retrieve service instances inside your bits you can use the \"),_c('code',[_vm._v(\"$di\")]),_vm._v(\" special property in the bit class.\\nIf you added the autocompletion correctly, you can even see which services are available in the container.\")]),_vm._v(\" \"),_c('div',{staticClass:\"language-typescript extra-class\"},[_c('pre',{pre:true,attrs:{\"class\":\"language-typescript\"}},[_c('code',[_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"import\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"AbstractBit\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"from\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token string\"}},[_vm._v(\"'@labor-digital/bits'\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"export\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"class\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"Example\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"extends\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token class-name\"}},[_vm._v(\"AbstractBit\")]),_vm._v(\" \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"mounted\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"{\")]),_vm._v(\"\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"token keyword\"}},[_vm._v(\"this\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"$di\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_vm._v(\"loggerService\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\".\")]),_c('span',{pre:true,attrs:{\"class\":\"token function\"}},[_vm._v(\"logString\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"(\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\")\")]),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\";\")]),_vm._v(\"\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\"),_c('span',{pre:true,attrs:{\"class\":\"token punctuation\"}},[_vm._v(\"}\")]),_vm._v(\"\\n\")])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"],"sourceRoot":""}